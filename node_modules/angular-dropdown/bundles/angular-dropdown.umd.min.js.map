{"version":3,"sources":["ng://angular-dropdown/lib/angular-dropdown-control.directive.ts","ng://angular-dropdown/lib/utils.ts","ng://angular-dropdown/lib/angular-dropdown.directive.ts","ng://angular-dropdown/lib/angular-dropdown-content.component.ts","ng://angular-dropdown/lib/angular-dropdown.module.ts"],"names":["AngularDropdownControlDirective","dropdown","element","this","prototype","onClick","e","stopPropagation","disabled","toggle","Directive","args","selector","host","[attr.aria-haspopup]","[attr.aria-controls]","[attr.aria-expanded]","[class.ng-dropdown-control]","[class.active]","AngularDropdownDirective","decorators","type","Host","Inject","forwardRef","ElementRef","HostListener","waitForAnimation","callback","requestAnimationFrame","computedStyle","window","getComputedStyle","animationName","animationPlayState","once","eventName","listener","addEventListener","listenOnce","removeEventListener","closest","Element","el","s","self","i","matches","document","ownerDocument","querySelectorAll","length","item","calculatePosition","trigger","_a","horizontalPosition","verticalPosition","matchTriggerWidth","previousHorizontalPosition","previousVerticalPosition","scroll","pageXOffset","pageYOffset","_b","getBoundingClientRect","triggerLeft","left","triggerTop","top","triggerWidth","width","triggerHeight","height","_c","dropdownHeight","dropdownWidth","viewportWidth","innerWidth","style","triggerLeftWithScroll","leftVisible","Math","min","max","rightVisible","right","triggerTopWithScroll","enoughRoomBelow","innerHeight","enoughRoomAbove","calculateInPlacePosition","dropdownRect","positionData","triggerRect","viewportRight","id","EmptyDropdownContentPosition","Object","freeze","vPosition","hPosition","bottom","_this","renderInPlace","control","_isOpen$","BehaviorSubject","isOpen$","pipe","skip","position$","beforeOpen","beforeClose","onOpen","filter","open","onClose","uniqueId","reposition","getValue","dropdownElement","triggerElement","options","applyReposition","initializeId","createDefaultWormholeOutlet","defineProperty","nativeElement","getElementById","dropdownId","ngOnChanges","firstChange","currentValue","previousValue","disable","open$","of","result","Observable","first","subscribe","next","close","skipFocus","close$","assign","HTMLElement","tabIndex","focus","enable","positions","changes","keys","forEach","k","generateDropdownId","outlet","createElement","body","insertBefore","firstChild","[class.render-in-place]","[class.ng-dropdown]","DOCUMENT","Attribute","Input","ContentChild","Output","AngularDropdownContentComponent","MutationObserver","zone","dropdownClass","overlay","hasMoved","_animationClass","isTouchDevice","mutationObserver","destroy$","Subject","transitioningInClass","transitionedInClass","transitioningOutClass","shouldOpen","repositionInZone","run","handleRootMouseDown","contains","closestDropdown","querySelector","getAttribute","parentDropdown","touchStartHandler","touchMoveHandler","ngOnInit","takeUntil","className","classList","remove","add","ngAfterViewChecked","animationClass","ngOnDestroy","teardownEvents","startObservingDomMutations","addGlobalEvents","animateIn","animateOut","parentElement","clone","cloneNode","appendChild","removeChild","mutations","addedNodes","removedNodes","observe","childList","subtree","stopObservingDomMutations","disconnect","removeGlobalEvents","Component","template","NgZone","AngularDropdownModule","NgModule","imports","CommonModule","NgWormholeModule","declarations","exports"],"mappings":"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","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Inject,\n  forwardRef,\n  Input,\n  Host,\n  HostListener\n} from '@angular/core';\n\nimport { AngularDropdownDirective }\n  from './angular-dropdown.directive';\n\n@Directive({\n  selector: '[ng-dropdown-control],[ngDropdownControl]',\n  host: {\n    '[attr.aria-haspopup]': 'true',\n    '[attr.aria-controls]': 'dropdown.id',\n    '[attr.aria-expanded]': 'dropdown.isOpen',\n    '[class.ng-dropdown-control]': 'true',\n    '[class.active]': 'dropdown.isOpen'\n  }\n})\nexport class AngularDropdownControlDirective {\n  @HostListener('click', [ '$event' ])\n  onClick(e: Event): void {\n    e.stopPropagation();\n\n    if (!this.dropdown.disabled) {\n      this.dropdown.toggle();\n    }\n  }\n\n  constructor(\n      @Host()\n      @Inject(forwardRef(() => AngularDropdownDirective))\n      public dropdown: AngularDropdownDirective,\n      public element: ElementRef) {\n  }\n}\n","export function waitForAnimation(element: Element, callback: (e?: Event) => any): void {\n  requestAnimationFrame(() => {\n    let computedStyle = window.getComputedStyle(element);\n\n    if (computedStyle.animationName !== 'none' &&\n        computedStyle.animationPlayState === 'running') {\n      return once(element, 'animationend', callback);\n    }\n\n    callback();\n  });\n}\n\nfunction once(element: Node, eventName: string, listener: (e: Event) => any): void {\n  element.addEventListener(eventName, function listenOnce(e) {\n    element.removeEventListener(eventName, listenOnce);\n\n    return listener(e);\n  });\n}\n\nexport const closest: (element: Element, selector: string) => Element | null\n  = (window as any).Element && Element.prototype.closest ?\n    (el, s) => el.closest(s) :\n    function closest(self: Element, s: string) {\n      let matches = ((self as any).document || self.ownerDocument).querySelectorAll(s),\n        i,\n      el = self;\n      do {\n        i = matches.length;\n        while (--i >= 0 && matches.item(i) !== el) {};\n      } while ((i < 0) && (el = el.parentElement!));\n      return el;\n    };\n\nexport function calculatePosition(\n  trigger: Element,\n  dropdown: Element,\n  { horizontalPosition, verticalPosition, matchTriggerWidth, previousHorizontalPosition, previousVerticalPosition }: any): any {\n  // Collect information about all the involved DOM elements\n  let scroll = { left: window.pageXOffset, top: window.pageYOffset };\n  let {\n    left: triggerLeft,\n    top: triggerTop,\n    width: triggerWidth,\n    height: triggerHeight\n  } = trigger.getBoundingClientRect();\n  let {\n    height: dropdownHeight,\n    width: dropdownWidth\n  } = dropdown.getBoundingClientRect();\n  let viewportWidth = window.innerWidth;\n  let style: any = {};\n\n  // Calculate drop down width\n  dropdownWidth = matchTriggerWidth ? triggerWidth : dropdownWidth;\n  if (matchTriggerWidth) {\n    style.width = dropdownWidth;\n  }\n\n  // Calculate horizontal position\n  let triggerLeftWithScroll = triggerLeft + scroll.left;\n  if (horizontalPosition === 'auto') {\n    // Calculate the number of visible horizontal pixels if we were to place the\n    // dropdown on the left and right\n    let leftVisible = Math.min(viewportWidth, triggerLeft + dropdownWidth) - Math.max(0, triggerLeft);\n    let rightVisible = Math.min(viewportWidth, triggerLeft + triggerWidth) - Math.max(0, triggerLeft + triggerWidth - dropdownWidth);\n\n    if (dropdownWidth > leftVisible && rightVisible > leftVisible) {\n      // If the drop down won't fit left-aligned, and there is more space on the\n      // right than on the left, then force right-aligned\n      horizontalPosition = 'right';\n    } else if (dropdownWidth > rightVisible && leftVisible > rightVisible) {\n      // If the drop down won't fit right-aligned, and there is more space on\n      // the left than on the right, then force left-aligned\n      horizontalPosition = 'left';\n    } else {\n      // Keep same position as previous\n      horizontalPosition = previousHorizontalPosition || 'left';\n    }\n  }\n  if (horizontalPosition === 'right') {\n    style.right = viewportWidth - (triggerLeftWithScroll + triggerWidth);\n  } else if (horizontalPosition === 'center') {\n    style.left = triggerLeftWithScroll + (triggerWidth - dropdownWidth) / 2;\n  } else {\n    style.left = triggerLeftWithScroll;\n  }\n\n  // Calculate vertical position\n  let triggerTopWithScroll = triggerTop + scroll.top;\n  if (verticalPosition === 'above') {\n    style.top = triggerTopWithScroll - dropdownHeight;\n  } else if (verticalPosition === 'below') {\n    style.top = triggerTopWithScroll + triggerHeight;\n  } else {\n    let viewportBottom = scroll.top + self.window.innerHeight;\n    let enoughRoomBelow = triggerTopWithScroll + triggerHeight + dropdownHeight < viewportBottom;\n    let enoughRoomAbove = triggerTop > dropdownHeight;\n\n    if (previousVerticalPosition === 'below' && !enoughRoomBelow && enoughRoomAbove) {\n      verticalPosition = 'above';\n    } else if (previousVerticalPosition === 'above' && !enoughRoomAbove && enoughRoomBelow) {\n      verticalPosition = 'below';\n    } else if (!previousVerticalPosition) {\n      verticalPosition = enoughRoomBelow ? 'below' : 'above';\n    } else {\n      verticalPosition = previousVerticalPosition;\n    }\n    style.top = triggerTopWithScroll + (verticalPosition === 'below' ? triggerHeight : -dropdownHeight);\n  }\n\n  return { horizontalPosition, verticalPosition, style };\n}\n\nexport function calculateInPlacePosition(\n    trigger: Element,\n    dropdown: Element,\n    { horizontalPosition, verticalPosition }: any) {\n  let dropdownRect;\n  let positionData: any = {};\n\n  if (horizontalPosition === 'auto') {\n    let triggerRect = trigger.getBoundingClientRect();\n    dropdownRect = dropdown.getBoundingClientRect();\n    let viewportRight = window.pageXOffset + window.innerWidth;\n    positionData.horizontalPosition = triggerRect.left + dropdownRect.width > viewportRight ? 'right' : 'left';\n  }\n  if (verticalPosition === 'above') {\n    positionData.verticalPosition = verticalPosition;\n    dropdownRect = dropdownRect || dropdown.getBoundingClientRect();\n    positionData.style = { top: -dropdownRect.height };\n  }\n  return positionData;\n}\n","import { Observable, BehaviorSubject, of } from 'rxjs';\nimport { skip, first, filter } from 'rxjs/operators';\n\nimport {\n  Component,\n  Directive,\n  Attribute,\n  Inject,\n  Input,\n  Output,\n  ElementRef,\n  AfterViewInit,\n  OnChanges,\n  ContentChild,\n  SimpleChanges,\n  EventEmitter,\n  QueryList,\n  ViewContainerRef,\n  forwardRef\n} from '@angular/core';\n\nimport { DOCUMENT } from '@angular/common';\n\nimport { AngularDropdownControlDirective } from './angular-dropdown-control.directive';\nimport { AngularDropdownContentComponent } from './angular-dropdown-content.component';\n\nimport { calculatePosition, calculateInPlacePosition } from './utils';\n\nexport interface AngularDropdownPositionChanges {\n  vPosition: 'above' | 'below';\n  hPosition: 'right' | 'center' | 'left';\n}\n\nlet id = 1;\nfunction generateDropdownId() {\n  return id++;\n}\n\nexport type VerticalPosition = 'auto' | 'above' | 'below';\nexport type HorizontalPosition = 'auto' | 'right' | 'center' | 'left';\n\nexport interface DropdownContentPosition {\n  readonly hPosition: HorizontalPosition | null;\n  readonly vPosition: VerticalPosition | null;\n  readonly top: string | null;\n  readonly left: string | null;\n  readonly bottom: string | null;\n  readonly right: string | null;\n}\n\nconst EmptyDropdownContentPosition = Object.freeze({\n  vPosition: null,\n  hPosition: null,\n  top: null,\n  left: null,\n  bottom: null,\n  right: null\n});\n\n@Directive({\n  selector: 'ng-dropdown,[ngDropdown],[ng-dropdown]',\n  host: {\n    '[class.render-in-place]': 'renderInPlace',\n    '[class.ng-dropdown]': 'true'\n  }\n})\nexport class AngularDropdownDirective implements OnChanges {\n  id?: string;\n\n  @Input()\n  renderInPlace = false;\n\n  @ContentChild(AngularDropdownControlDirective)\n  control: AngularDropdownControlDirective | null = null;\n\n  previousVerticalPosition: VerticalPosition | null = null;\n  previousHorizontalPosition: HorizontalPosition | null = null;\n  matchTriggerWidth = false;\n\n  private _isOpen$ = new BehaviorSubject(false);\n  isOpen$ = this._isOpen$.pipe(skip(1));\n\n  position$ = new BehaviorSubject<Readonly<DropdownContentPosition>>(\n    EmptyDropdownContentPosition\n  );\n\n  get dropdownId() {\n    return `ng-dropdown-content-${this.uniqueId}`;\n  }\n\n  @Input()\n  calculatePosition: Function = calculatePosition;\n  @Input()\n  calculateInPlacePosition: Function = calculateInPlacePosition;\n\n  @Input()\n  disabled = false;\n\n  @Input()\n  beforeOpen: (() => boolean | Observable<boolean>) | null = null;\n\n  @Input()\n  beforeClose: (() => boolean | Observable<boolean>) | null = null;\n\n  @Input()\n  public verticalPosition: VerticalPosition = 'auto';\n  @Input()\n  public horizontalPosition: HorizontalPosition = 'auto';\n\n  @Output('open')\n  onOpen = this.isOpen$.pipe(filter(open => open === true));\n\n  @Output('close')\n  onClose = this.isOpen$.pipe(filter(open => open === false));\n\n  get triggerElement(): HTMLElement {\n    return this.control!.element.nativeElement;\n  }\n\n  get dropdownElement(): HTMLElement {\n    return this.document.getElementById(this.dropdownId)!;\n  }\n\n  @ContentChild(forwardRef(() => AngularDropdownContentComponent))\n  private dropdownContent?: AngularDropdownContentComponent;\n\n  private uniqueId: number | string | null = null;\n  private width: number | null = null;\n  private document: Document;\n\n  constructor(@Inject(DOCUMENT) document: any, @Attribute('id') id?: string) {\n    this.document = document;\n    this.initializeId(id);\n    this.createDefaultWormholeOutlet();\n  }\n\n  ngOnChanges({ disabled }: SimpleChanges): void {\n    if (\n      disabled &&\n      disabled.firstChange === false &&\n      disabled.currentValue === true &&\n      disabled.previousValue !== true\n    ) {\n      this.disable();\n    }\n  }\n\n  open(): void {\n    if (this.disabled || this._isOpen$.getValue()) {\n      return;\n    }\n\n    let open$ = of(true);\n\n    if (this.beforeOpen) {\n      const result = this.beforeOpen();\n      open$ = result instanceof Observable ? result : of(result);\n    }\n\n    open$\n      .pipe(\n        first(),\n        filter(open => open === true)\n      )\n      .subscribe(() => this._isOpen$.next(true));\n  }\n\n  close(skipFocus = false): void {\n    if (this.disabled || !this._isOpen$.getValue()) {\n      return;\n    }\n\n    let close$ = of(true);\n\n    if (this.beforeClose) {\n      const result = this.beforeClose();\n      close$ = result instanceof Observable ? result : of(result);\n    }\n\n    close$\n      .pipe(\n        first(),\n        filter(close => close === true)\n      )\n      .subscribe(() => {\n        Object.assign(this, {\n          hPosition: null,\n          vPosition: null,\n          top: null,\n          right: null,\n          bottom: null,\n          left: null,\n          width: null,\n          previousVerticalPosition: null,\n          previousHorizontalPosition: null\n        });\n        this._isOpen$.next(false);\n\n        if (!skipFocus) {\n          if (\n            this.triggerElement instanceof HTMLElement &&\n            this.triggerElement.tabIndex > -1\n          ) {\n            this.triggerElement.focus();\n          }\n        }\n      });\n  }\n\n  toggle(): void {\n    if (this._isOpen$.getValue()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  disable(): void {\n    this.disabled = true;\n    this.close();\n  }\n\n  enable(): void {\n    this.disabled = false;\n  }\n\n  reposition = (): AngularDropdownPositionChanges | null => {\n    if (!this._isOpen$.getValue()) {\n      return null;\n    }\n\n    let dropdownElement = this.dropdownElement;\n    if (!dropdownElement || !this.triggerElement) {\n      return null;\n    }\n\n    let calculatePosition = this.renderInPlace\n      ? this.calculateInPlacePosition\n      : this.calculatePosition;\n\n    let options = {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      matchTriggerWidth: this.matchTriggerWidth,\n      previousHorizontalPosition: this.previousHorizontalPosition,\n      previousVerticalPosition: this.previousVerticalPosition\n    };\n\n    let positionData = calculatePosition(\n      this.triggerElement,\n      dropdownElement,\n      options\n    );\n\n    return this.applyReposition(\n      this.triggerElement,\n      dropdownElement,\n      positionData\n    );\n  };\n\n  private applyReposition(\n    trigger: Element,\n    dropdown: HTMLElement,\n    positions: any\n  ): AngularDropdownPositionChanges {\n    let changes: any = {\n      hPosition: positions.horizontalPosition,\n      vPosition: positions.verticalPosition\n    };\n    if (positions.style) {\n      changes.top = `${positions.style.top}px`;\n      // The component can be aligned from the right or from the left, but not from both.\n      if (positions.style.left != null) {\n        changes.left = `${positions.style.left}px`;\n        changes.right = null;\n      } else if (positions.style.right != null) {\n        changes.right = `${positions.style.right}px`;\n        changes.left = null;\n      }\n      if (positions.style.width != null) {\n        changes.width = `${positions.style.width}px`;\n      }\n      if (this.position$.getValue().top == null) {\n        // Bypass on the first reposition only to avoid flickering.\n        Object.keys(positions.style).forEach(\n          k => (dropdown.style[k as any] = positions.style[k])\n        );\n      }\n    }\n\n    this.position$.next(changes);\n\n    this.previousHorizontalPosition = positions.horizontalPosition;\n    this.previousVerticalPosition = positions.verticalPosition;\n\n    return changes;\n  }\n\n  private initializeId(id?: string): void {\n    if (id) {\n      this.id = this.uniqueId = id;\n    } else {\n      this.uniqueId = generateDropdownId();\n      this.id = `ng-dropdown-${this.uniqueId}`;\n    }\n  }\n\n  private createDefaultWormholeOutlet(): void {\n    if (!this.document.getElementById('ng-dropdown-outlet')) {\n      let outlet = this.document.createElement('div');\n      outlet.id = 'ng-dropdown-outlet';\n      this.document.body.insertBefore(outlet, this.document.body.firstChild);\n    }\n  }\n}\n","import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n  Component,\n  Input,\n  Host,\n  Inject,\n  forwardRef,\n  AfterViewChecked,\n  OnInit,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\n\nimport { DOCUMENT } from '@angular/common';\n\nimport { AngularDropdownDirective } from './angular-dropdown.directive';\nimport { closest, waitForAnimation } from './utils';\n\nconst MutationObserver = (window as any).MutationObserver;\n\n@Component({\n  selector: 'ng-dropdown-content,[ng-dropdown-content],[ngDropdownContent]',\n  templateUrl: './angular-dropdown-content.component.html',\n  styleUrls: ['./angular-dropdown-content.component.css'],\n  host: {\n    '[class.render-in-place]': 'dropdown.renderInPlace'\n  }\n})\nexport class AngularDropdownContentComponent\n  implements OnInit, AfterViewChecked, OnDestroy {\n  @Input()\n  dropdownClass = '';\n\n  @Input()\n  overlay = false;\n\n  private hasMoved = false;\n  private _animationClass: string | null = null;\n  private isTouchDevice: boolean = 'ontouchstart' in window;\n  private mutationObserver: MutationObserver | null = null;\n  private destroy$ = new Subject<void>();\n\n  @Input()\n  transitioningInClass = 'ng-dropdown-content--transitioning-in';\n  @Input()\n  transitionedInClass = 'ng-dropdown-content--transitioned-in';\n  @Input()\n  transitioningOutClass = 'ng-dropdown-content--transitioning-out';\n\n  private get dropdownElement(): HTMLElement {\n    return this.dropdown.dropdownElement;\n  }\n\n  private shouldOpen = false;\n  private document: Document;\n\n  constructor(\n    @Host()\n    @Inject(forwardRef(() => AngularDropdownDirective))\n    public dropdown: AngularDropdownDirective,\n    private zone: NgZone,\n    @Inject(DOCUMENT) document: any\n  ) {\n    this.document = document;\n  }\n\n  ngOnInit(): void {\n    this.dropdown.onOpen\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => (this.shouldOpen = true));\n\n    this.dropdown.onClose\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.close());\n  }\n\n  set animationClass(className: string | null) {\n    if (this._animationClass && className !== this._animationClass) {\n      this.dropdownElement.classList.remove(this._animationClass);\n    } else if (className) {\n      this.dropdownElement.classList.add(className);\n    }\n    this._animationClass = className;\n  }\n\n  get animationClass(): string | null {\n    return this._animationClass;\n  }\n\n  get triggerElement(): Element {\n    return this.dropdown.triggerElement;\n  }\n\n  ngAfterViewChecked() {\n    if (this.shouldOpen) {\n      this.animationClass = this.transitioningInClass;\n      requestAnimationFrame(() => this.open());\n      this.shouldOpen = false;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.teardownEvents();\n  }\n\n  open(): void {\n    this.document.body.addEventListener(\n      'mousedown',\n      this.handleRootMouseDown,\n      true\n    );\n\n    if (this.isTouchDevice) {\n      this.document.body.addEventListener(\n        'touchstart',\n        this.touchStartHandler,\n        true\n      );\n      this.document.body.addEventListener(\n        'touchend',\n        this.handleRootMouseDown,\n        true\n      );\n    }\n\n    let changes = this.dropdown.reposition();\n    if (!this.dropdown.renderInPlace) {\n      this.addGlobalEvents();\n      this.startObservingDomMutations();\n    } else if (changes !== null && changes.vPosition === 'above') {\n      this.startObservingDomMutations();\n    }\n\n    requestAnimationFrame(() => this.animateIn());\n  }\n\n  close(): void {\n    this.teardownEvents();\n    this.animateOut();\n  }\n\n  private repositionInZone = () =>\n    this.zone.run(() => this.dropdown.reposition());\n\n  private animateIn(): void {\n    waitForAnimation(this.dropdownElement, () => {\n      this.animationClass = this.transitionedInClass;\n    });\n  }\n\n  private animateOut(): void {\n    let parentElement = this.dropdown.renderInPlace\n      ? this.dropdownElement.parentElement!.parentElement\n      : this.dropdownElement.parentElement;\n    let clone = this.dropdownElement.cloneNode(true) as HTMLElement;\n    clone.id = `${this.dropdownElement.id}--clone`;\n    clone.classList.remove(this.transitionedInClass);\n    clone.classList.remove(this.transitioningInClass);\n    clone.classList.add(this.transitioningOutClass);\n    parentElement!.appendChild(clone);\n    this.animationClass = this.transitioningInClass;\n    waitForAnimation(clone, () => parentElement!.removeChild(clone));\n  }\n\n  private handleRootMouseDown = (e: Event): void => {\n    if (\n      this.hasMoved ||\n      this.dropdownElement.contains(e.target as Element) ||\n      (this.triggerElement &&\n        this.triggerElement.contains(e.target as Element))\n    ) {\n      this.hasMoved = false;\n      return;\n    }\n\n    let closestDropdown = closest(e.target as Element, 'ng-dropdown-content');\n    if (closestDropdown) {\n      let trigger = this.document.querySelector(\n        `[aria-controls=${closestDropdown.getAttribute('id')}]`\n      );\n      let parentDropdown = closest(trigger!, 'ng-dropdown-content');\n      if (\n        parentDropdown &&\n        parentDropdown.getAttribute('id') === this.dropdown.dropdownId\n      ) {\n        this.hasMoved = false;\n        return;\n      }\n    }\n\n    this.dropdown.close(true);\n  };\n\n  private startObservingDomMutations(): void {\n    if (MutationObserver) {\n      this.mutationObserver = new MutationObserver((mutations: any) => {\n        if (\n          mutations[0].addedNodes.length ||\n          mutations[0].removedNodes.length\n        ) {\n          this.repositionInZone();\n        }\n      });\n      this.mutationObserver!.observe(this.dropdownElement, {\n        childList: true,\n        subtree: true\n      });\n    } else {\n      this.dropdownElement.addEventListener(\n        'DOMNodeInserted',\n        this.repositionInZone,\n        false\n      );\n      this.dropdownElement.addEventListener(\n        'DOMNodeRemoved',\n        this.repositionInZone,\n        false\n      );\n    }\n  }\n\n  private stopObservingDomMutations(): void {\n    if (MutationObserver) {\n      if (this.mutationObserver) {\n        this.mutationObserver.disconnect();\n        this.mutationObserver = null;\n      }\n    } else {\n      if (this.dropdownElement) {\n        this.dropdownElement.removeEventListener(\n          'DOMNodeInserted',\n          this.repositionInZone\n        );\n        this.dropdownElement.removeEventListener(\n          'DOMNodeRemoved',\n          this.repositionInZone\n        );\n      }\n    }\n  }\n\n  private addGlobalEvents(): void {\n    window.addEventListener('scroll', this.repositionInZone);\n    window.addEventListener('resize', this.repositionInZone);\n    window.addEventListener('orientationchange', this.repositionInZone);\n  }\n\n  private removeGlobalEvents(): void {\n    window.removeEventListener('scroll', this.repositionInZone);\n    window.removeEventListener('resize', this.repositionInZone);\n    window.removeEventListener('orientationchange', this.repositionInZone);\n  }\n\n  private touchStartHandler = (e: Event) => {\n    this.document.body.addEventListener(\n      'touchmove',\n      this.touchMoveHandler,\n      true\n    );\n  };\n\n  private touchMoveHandler = (e: Event) => {\n    this.hasMoved = true;\n    this.document.body.removeEventListener(\n      'touchmove',\n      this.touchMoveHandler,\n      true\n    );\n  };\n\n  private teardownEvents() {\n    this.removeGlobalEvents();\n    this.stopObservingDomMutations();\n    this.document.body.removeEventListener(\n      'mousedown',\n      this.handleRootMouseDown,\n      true\n    );\n\n    if (this.isTouchDevice) {\n      this.document.body.removeEventListener(\n        'touchstart',\n        this.touchStartHandler,\n        true\n      );\n      this.document.body.removeEventListener(\n        'touchend',\n        this.handleRootMouseDown,\n        true\n      );\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgWormholeModule } from 'ng-wormhole';\n\nimport { AngularDropdownDirective } from './angular-dropdown.directive';\nimport { AngularDropdownContentComponent } from './angular-dropdown-content.component';\nimport { AngularDropdownControlDirective } from './angular-dropdown-control.directive';\n\n@NgModule({\n  imports: [CommonModule, NgWormholeModule],\n  declarations: [\n    AngularDropdownDirective,\n    AngularDropdownControlDirective,\n    AngularDropdownContentComponent\n  ],\n  exports: [\n    AngularDropdownDirective,\n    AngularDropdownControlDirective,\n    AngularDropdownContentComponent\n  ]\n})\nexport class AngularDropdownModule {}\n"]}